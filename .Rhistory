sliderInput(inputId = "year",
label = "Choose year",
value = 1990,
min = 1960, max = 2017),
step = 1,
plotOutput(outputId = "hist"),
checkboxGroupInput(inputId = "industry",
label = "Choose industry",
selected = 36,
choices = unique(X$sic2)),
)
ui <- fluidPage(
sliderInput(inputId = "year",
label = "Choose year",
value = 1990,
min = 1960, max = 2017),
step = 1,
plotOutput(outputId = "hist"),
checkboxGroupInput(inputId = "industry",
label = "Choose industry",
selected = 36,
choices = list(unique(X$sic2))),
)
unique(X$sic2)
industries <- unique(X$sic2)
industries <- industries[!is.na(industries)]
ui <- fluidPage(
sliderInput(inputId = "year",
label = "Choose year",
value = 1990,
min = 1960, max = 2017),
step = 1,
plotOutput(outputId = "hist"),
checkboxGroupInput(inputId = "industry",
label = "Choose industry",
selected = 36,
choices = industries),
)
ui <- fluidPage(
sliderInput(inputId = "year",
label = "Choose year",
value = 1990,
min = 1960, max = 2017),
step = 1,
plotOutput(outputId = "hist"),
checkboxGroupInput(inputId = "industry",
label = "Choose industry",
selected = 36,
choices = list(industries)),
)
ui <- fluidPage(
sliderInput(inputId = "year",
label = "Choose year",
value = 1990,
min = 1960, max = 2017),
step = 1,
plotOutput(outputId = "hist"),
checkboxGroupInput(inputId = "industry",
label = "Choose industry",
selected = 36,
choices = as.list(industries)),
)
?c
c(industries)
ui <- fluidPage(
sliderInput(inputId = "year",
label = "Choose year",
value = 1990,
min = 1960, max = 2017),
step = 1,
plotOutput(outputId = "hist"),
checkboxGroupInput(inputId = "industry",
label = "Choose industry",
selected = 36,
choices = c(industries)),
)
ui <- fluidPage(
sliderInput(inputId = "year",
label = "Choose year",
value = 1990,
min = 1960, max = 2017),
step = 1,
plotOutput(outputId = "hist"),
checkboxGroupInput(inputId = "industry",
label = "Choose industry",
selected = 36,
choices = c(57, 50)),
)
ui <- fluidPage(
sliderInput(inputId = "year",
label = "Choose year",
value = 1990,
min = 1960, max = 2017),
step = 1,
plotOutput(outputId = "hist"),
checkboxGroupInput(inputId = "industry",
label = "Choose industry",
selected = 36,
choices = c(57, 50))
)
ui <- fluidPage(
sliderInput(inputId = "year",
label = "Choose year",
value = 1990,
min = 1960, max = 2017),
step = 1,
plotOutput(outputId = "hist"),
checkboxGroupInput(inputId = "industry",
label = "Choose industry",
selected = 36,
choices = industries)
)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", breaks = 40)
})
}
shinyApp(ui = ui, server =  server)
range(X$fyearq)
ui <- fluidPage(
sliderInput(inputId = "year",
label = "Choose year",
value = 1990,
min = 1962, max = 2018,
step = 1),
checkboxInput(inputId = "density",
label = strong("Show density estimate"),
value = FALSE),
plotOutput(outputId = "hist"),
checkboxGroupInput(inputId = "industry",
label = "Choose industry",
selected = 36,
choices = industries),
# Display this only if the density is shown
conditionalPanel(condition = "input.density == true",
sliderInput(inputId = "bw_adjust",
label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
)
)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", breaks = 40)
if (input$density) {
dens <- density(faithful$eruptions, adjust = input$bw_adjust)
lines(dens, col = "blue")
}
})
}
shinyApp(ui = ui, server =  server)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(faithful$eruptions, adjust = input$bw_adjust)
lines(dens, col = "blue")
}
})
}
shinyApp(ui = ui, server =  server)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(X[o, "niq"], adjust = input$bw_adjust)
lines(dens, col = "blue")
}
})
}
shinyApp(ui = ui, server =  server)
ui <- fluidPage(
sliderInput(inputId = "year",
label = "Choose year",
value = 1990,
min = 1962, max = 2018,
step = 1),
checkboxInput(inputId = "density",
label = strong("Show density estimate"),
value = FALSE),
# Display this only if the density is shown
conditionalPanel(condition = "input.density == true",
sliderInput(inputId = "bw_adjust",
label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
),
plotOutput(outputId = "hist"),
checkboxGroupInput(inputId = "industry",
label = "Choose industry",
selected = 36,
choices = industries)
)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(X[o, "niq"], adjust = input$bw_adjust)
lines(dens, col = "blue")
}
})
}
shinyApp(ui = ui, server =  server)
ui <- fluidPage(
titlePanel("Net Income Distribution"),
sidebarLayout(
# Define the sidebar with inputs
sidebarPanel(
sliderInput(inputId = "year", label = "Choose year", value = 1990, min = 1962, max = 2018, step = 1),
checkboxInput(inputId = "density", label = strong("Show density estimate"), value = FALSE),
# Display this only if the density is shown
conditionalPanel(condition = "input.density == true",
sliderInput(inputId = "bw_adjust",
label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)),
checkboxGroupInput(inputId = "industry", label = "Choose industry", selected = 36, choices = industries),
hr(),
helpText("Data from Compustat")),
mainPanel(plotOutput(outputId = "hist"))
)
)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(X[o, "niq"], adjust = input$bw_adjust)
lines(dens, col = "blue")
}
})
}
shinyApp(ui = ui, server =  server)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(X[o, "niq"], adjust = input$bw_adjust)
lines(dens, col = "blue")
}
o2 <- which(X$sic2 %in% input$industry)
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
plot(x = niq.agg$datcqtr, y = niq.agg$nig.sum, type = 'l', main = "Total Net Income")
})
}
shinyApp(ui = ui, server =  server)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(X[o, "niq"], adjust = input$bw_adjust)
lines(dens, col = "blue")
}
o2 <- which(X$sic2 %in% input$industry)
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
plot(niq.agg$nig.sum, type = 'l', main = "Total Net Income")
})
}
shinyApp(ui = ui, server =  server)
o2 <- which(X$sic2 %in% c(36))
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
View(niq.agg)
plot(niq.agg$niq.sum, type = 'l', main = "Total Net Income")
plot(niq.sum ~ datacqtr, data = niq.agg, type = 'l', main = "Total Net Income")
plot(x = nig.agg$datacqtr, y = niq.agg$niq.sum, type = 'l', main = "Total Net Income")
plot(x = niq.agg$datacqtr, y = niq.agg$niq.sum, type = 'l', main = "Total Net Income")
niq.agg <- complete.cases(niq.agg)
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
niq.agg <- niq.agg[complete.cases(niq.agg)]
o2 <- which(X$sic2 %in% c(36))
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
niq.agg <- niq.agg[complete.cases(niq.agg), ]
plot(x = niq.agg$datacqtr, y = niq.agg$niq.sum, type = 'l', main = "Total Net Income")
summary(niq.agg$datacqtr)
table(niq.agg$datacqtr)
?complete.cases
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(X[o, "niq"], adjust = input$bw_adjust)
lines(dens, col = "blue")
}
o2 <- which(X$sic2 %in% input$industry)
o2 <- which(X$sic2 %in% c(36))
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
niq.agg <- niq.agg[complete.cases(niq.agg), ]
plot(niq.agg$niq.sum, type = 'l', main = "Total Net Income")
})
}
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(X[o, "niq"], adjust = input$bw_adjust)
lines(dens, col = "blue")
}
o2 <- which(X$sic2 %in% input$industry)
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
niq.agg <- niq.agg[complete.cases(niq.agg), ]
plot(niq.agg$niq.sum, type = 'l', main = "Total Net Income")
})
}
shinyApp(ui = ui, server =  server)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(X[o, "niq"], adjust = input$bw_adjust)
lines(dens, col = "blue")
}
o2 <- which(X$sic2 %in% input$industry)
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
niq.agg <- niq.agg[complete.cases(niq.agg), ]
plot(niq.agg$niq.sum, type = 'l', main = "Total Net Income")
})
output$tsplot <- renderPlot({
o2 <- which(X$sic2 %in% input$industry)
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
niq.agg <- niq.agg[complete.cases(niq.agg), ]
plot(niq.agg$niq.sum, type = 'l', main = "Total Net Income")
})
}
shinyApp(ui = ui, server =  server)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(X[o, "niq"], adjust = input$bw_adjust)
lines(dens, col = "blue")
}
})
output$tsplot <- renderPlot({
o2 <- which(X$sic2 %in% input$industry)
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
niq.agg <- niq.agg[complete.cases(niq.agg), ]
plot(niq.agg$niq.sum, type = 'l', main = "Total Net Income")
})
}
shinyApp(ui = ui, server =  server)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(X[o, "niq"], adjust = input$bw_adjust)
lines(dens, col = "blue")
}
})
output$tsplot <- renderPlot({
o2 <- which(X$sic2 %in% input$industry)
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
niq.agg <- niq.agg[complete.cases(niq.agg), ]
plot(niq.agg$niq.sum, type = 'l', main = "Total Net Income")
})
}
shinyApp(ui = ui, server =  server)
mainPanel("main panel",
fluidRow(
splitLayout(
cellWidths = c("50%", "50%"),
plotOutput("plotgraph1"),
plotOutput("plotgraph2"))))
?plotOutput
ui <- fluidPage(
titlePanel("Net Income Distribution"),
sidebarLayout(
# Define the sidebar with inputs
sidebarPanel(
sliderInput(inputId = "year", label = "Choose year", value = 1990, min = 1962, max = 2018, step = 1),
checkboxInput(inputId = "density", label = strong("Show density estimate"), value = FALSE),
# Display this only if the density is shown
conditionalPanel(condition = "input.density == true",
sliderInput(inputId = "bw_adjust",
label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)),
checkboxGroupInput(inputId = "industry", label = "Choose industry", selected = 36, choices = industries),
hr(),
helpText("Data from Compustat")),
#mainPanel(plotOutput(outputId = "hist"))
mainPanel("main panel",
fluidRow(
splitLayout(
cellWidths = c("50%", "50%"),
plotOutput("hist"),
plotOutput("tsplot"))))
)
)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(X[o, "niq"], adjust = input$bw_adjust)
lines(dens, col = "blue")
}
})
output$tsplot <- renderPlot({
o2 <- which(X$sic2 %in% input$industry)
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
niq.agg <- niq.agg[complete.cases(niq.agg), ]
plot(niq.agg$niq.sum, type = 'l', main = "Total Net Income")
})
}
shinyApp(ui = ui, server =  server)
?fluidRow
ui <- fluidPage(
titlePanel("Net Income Distribution"),
sidebarLayout(
# Define the sidebar with inputs
sidebarPanel(
sliderInput(inputId = "year", label = "Choose year", value = 1990, min = 1962, max = 2018, step = 1),
checkboxInput(inputId = "density", label = strong("Show density estimate"), value = FALSE),
# Display this only if the density is shown
conditionalPanel(condition = "input.density == true",
sliderInput(inputId = "bw_adjust",
label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)),
checkboxGroupInput(inputId = "industry", label = "Choose industry", selected = 36, choices = industries),
hr(),
helpText("Data from Compustat")),
#mainPanel(plotOutput(outputId = "hist"))
#mainPanel("main panel",
#         fluidRow(
#          splitLayout(
#           cellWidths = c("50%", "50%"),
#          plotOutput("hist"),
#         plotOutput("tsplot"))))
mainPanel("main panel", plotOutput("hist"),  plotOutput("tsplot"))
)
)
server <-  function(input, output){
output$hist <- renderPlot({
o <- which(X$fyearq == input$year & X$sic2 %in% input$industry)
title = paste(length(o), " Firms")
hist(X[o, "niq"], main = title, xlab = "Net Income", probability = TRUE, breaks = 40)
if (input$density) {
dens <- density(X[o, "niq"], adjust = input$bw_adjust)
lines(dens, col = "blue")
}
})
output$tsplot <- renderPlot({
o2 <- which(X$sic2 %in% input$industry)
niq.agg <- aggregate(X[o2, "niq"], by = list(X[o2, "datacqtr"]), FUN = sum, na.rm = TRUE)
names(niq.agg) <- c("datacqtr", "niq.sum")
niq.agg <- niq.agg[complete.cases(niq.agg), ]
plot(niq.agg$niq.sum, type = 'l', main = "Total Net Income")
})
}
shinyApp(ui = ui, server =  server)
library(ggplot2)
rm(list=ls())
gc()
library(ggplot2)
setwd("C:/Users/Reginald/Dropbox/Research/ceres")
rm(list=ls())
gc()
load("../0_datasets/comp_fundq.RData")
X <- comp.fundq
source("../0_code/useful-fn.R")
X <- lead.df(X, "niq", "gvkey", "qtr")
declines <- 1*(X$niq.lead1 < X$niq)
summary(declines)
negearn <- 1*(X$niq.lead1 < 0)
summary(negearn)
X$decline <- 1*(X$niq.lead1 < X$niq)
X$negearn <- 1*(X$niq.lead1 < 0)
X1 <- aggregate(X$negearn, by = list(X$datacqtr), FUN = mean, na.rm = TRUE)
names(X1) <- c("datacqtr", "mean.negearn")
View(X1)
plot(X1$mean.negearn)
plot(X1$mean.negearn, type = 'l')
mean.declines <- aggregate(X$decline, by = list(X$datacqtr), FUN = mean, na.rm = TRUE)
names(mean.declines) <- c("datacqtr", "mean.decline")
plot(mean.declines$mean.decline, type = 'l')
head(X[which(X$decline == 1), c("tic", "datacqtr", "niq", "niq.lead1")])
load("../0_datasets/comp_fundq.RData")
write.csv(x = comp.fundq, file = "../0_datasets/comp_fundq.csv")
