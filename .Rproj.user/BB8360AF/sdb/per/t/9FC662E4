{
    "collab_server" : "",
    "contents" : "## Reginald Edwards\n## 11 June 2018\n## 16 June 2018\n## Import quarterly Compustat fundamentals data\n## Clean and filter the data\n## Generate features for modeling\n## Compute quarterly financial ratios.\n###############################################################################\n\nrm(list=ls())\ngc()\nlibrary(RPostgres)\nsource(\"../0_code/useful-fn.R\")\n\n#wrds <- dbConnect(Postgres(),  host='wrds-pgdata.wharton.upenn.edu', port=9737, user='reggie09', password='gbHjz5FV', sslmode='require', dbname='wrds')\n\n## Raw Compustat data are in a PostgresQL database \"import.comp_fundq\"\nlocaldb <- dbConnect(Postgres(), \n  host='localhost',\n  port=5432,\n  user='postgres',\n  password = 'havoc')\n\n\n###############################################################################\n## Retrieve compustat fundamentals from SQL database\n###############################################################################\nres <- RPostgres::dbSendQuery(conn = localdb, statement = \"SELECT * FROM fundq_short;\")\n#comp.fundq <- RPostgres::dbFetch(res, n = 100)\ncomp.fundq <- RPostgres::dbFetch(res)\nRPostgres::dbClearResult(res)\n\n## number of observations of \"baseline\" data\nn <- nrow(comp.fundq)\n\n\n###############################################################################\n## Convert character variables to numeric variables, date variables etc. as\n## appropriate.\n###############################################################################\n\nvars <- c(\"apq\",\n\"ajexq\",\n\"atq\",\n\"capxy\",\n\"cheq\",\n\"cshoq\",\n\"ceqq\",\n\"cogsq\",\n\"actq\",\n\"lctq\",\n\"dlcq\",\n\"txdbq\",\n\"txditcq\",\n\"dpcy\",\n\"dpq\",\n\"dvpq\",\n\"dvpy\",\n\"oepsxy\",\n\"epspxq\",\n\"epsfxq\",\n\"epsfiq\",\n\"opepsq\",\n\"xidoq\",\n\"ibq\",\n\"ibadjq\",\n\"ibcomq\",\n\"ibcy\",\n\"txtq\",\n\"txpq\",\n\"xintq\",\n\"invtq\",\n\"icaptq\",\n\"ltq\",\n\"dlttq\",\n\"niq\",\n\"miiq\",\n\"mibq\",\n\"nopiq\",\n\"oancfy\",\n\"xoprq\",\n\"oiadpq\",\n\"oibdpq\",\n\"pstkrq\",\n\"pstkq\",\n\"piq\",\n\"prccq\",\n\"ppentq\",\n\"rectq\",\n\"xrdq\",\n\"revtq\",\n\"saleq\",\n\"xsgaq\",\n\"spiq\",\n\"seqq\")\n\nX <- comp.fundq\nfor(v in vars) X[,v] <- as.numeric(X[,v])\ncomp.fundq <- X\nrm(\"X\")\n\n\n\n###############################################################################\n## Create a global \"quarter\" time variable as quarters since the first\n## quarter of 1960\n###############################################################################\nget.quarter <- function(x){\n  ## x is a datacqtr from Compustat\n  year <- as.numeric(substr(x, 1, 4))\n  qtr <- as.numeric(substr(x, 6,6))\n  return((year - 1960)*4 + qtr)\n}\ncomp.fundq$qtr <- get.quarter(comp.fundq$datacqtr)\n\n\n###############################################################################\n## Add industry codes\n###############################################################################\n## TODO: move this code to SQL\nload(\"../0_datasets/comp_funda.RData\")\nindustries <- comp.funda[,c(\"gvkey\", \"fyear\", \"sich\")]\nrm(comp.funda)\ncomp.fundq <- merge(comp.fundq, industries, by.x = c(\"gvkey\", \"fyearq\"), by.y = c(\"gvkey\", \"fyear\"), all.x = TRUE)\n\n###############################################################################\n## Apply some data filters\n###############################################################################\n## Create a table for keeping track of data filters and observations at each\n## step.\ncomp.fundq.filters <- data.frame(matrix(NA, nrow = 0, ncol = 2))\nnames(comp.fundq.filters) <- c(\"data.filter\", \"obs.remaining\")\ncomp.fundq.filters[1, ] <- c(\"baseline\", nrow(comp.fundq))\n\n## Data filters, from most to least essential\n## 1. Positive total assets that are not missing (atq > 0)\ncomp.fundq <- comp.fundq[-which(is.na(comp.fundq$atq)), ]\ncomp.fundq <- comp.fundq[comp.fundq$atq > 0 , ]\ncomp.fundq.filters[nrow(comp.fundq.filters) + 1, ] <- c(\"atq_gt_0\", nrow(comp.fundq))\n\n## 2. Positive revenue/sales that are not missing (saleq > 0)\ncomp.fundq <- comp.fundq[-which(is.na(comp.fundq$saleq)), ]\ncomp.fundq <- comp.fundq[comp.fundq$saleq > 0, ]\ncomp.fundq.filters[nrow(comp.fundq.filters) + 1, ] <- c(\"saleq_gt_0\", nrow(comp.fundq))\n\n## 3. Non-missing stock price at end of quarter greater than $2 per share (prccq > 2)\ncomp.fundq <- comp.fundq[-which(is.na(comp.fundq$prccq)), ]\ncomp.fundq <- comp.fundq[comp.fundq$prccq > 2, ]\ncomp.fundq.filters[nrow(comp.fundq.filters) + 1, ] <- c(\"prccq_gt_2\", nrow(comp.fundq))\n\n## 4. EPS is not missing (epspxq not NA)\ncomp.fundq <- comp.fundq[-which(is.na(comp.fundq$epspxq)), ]\ncomp.fundq.filters[nrow(comp.fundq.filters) + 1, ] <- c(\"epspxq_not_na\", nrow(comp.fundq))\n\n## 5. Date is not missing\ncomp.fundq <- comp.fundq[!(comp.fundq$datacqtr == \"\"), ]\ncomp.fundq <- comp.fundq[!(comp.fundq$datadate == \"\"), ]\ncomp.fundq.filters[nrow(comp.fundq.filters) + 1, ] <- c(\"date_not_na\", nrow(comp.fundq))\n\n\n## . Remove firms with fewer than 20 quarters (5 years) of continuous EPS data\n## TODO: Deal with gaps\n\n\n###############################################################################\n## Lag and lead Variables\n###############################################################################\n## Sort by gvkey and quarter\ncomp.fundq <- comp.fundq[order(comp.fundq$gvkey, comp.fundq$datacqtr), ]\n\n## Create a lag of quarter time variable to check for gaps in the time series \n## for each firm.\ncomp.fundq <- lag.df(comp.fundq, \"qtr\", \"gvkey\", \"qtr\")\ncomp.fundq$gap <- comp.fundq$qtr - comp.fundq$qtr.lag1\nhist(comp.fundq$gap)\n## Approx. 93% of the data is continuous chuncks (gap == 1)\n\n## Create a one-quarter-ahead lead of EPS\ncomp.fundq <- lead.df(comp.fundq, \"epspxq\", \"gvkey\", \"qtr\")\n\n###############################################################################\n## Save data to project data folder\n###############################################################################\ncomp.fundq <- comp.fundq[order(comp.fundq$gvkey, comp.fundq$datacqtr, decreasing = FALSE), ]\nsave(comp.fundq, file = '../0_datasets/comp_fundq.RData')\nwrite.csv(x = comp.fundq, file = \"../0_datasets/comp_fundq.csv\")\nsave(comp.fundq.filters, file = \"data/comp_fundq_filters.RData\")\n",
    "created" : 1523753474542.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3503265227",
    "id" : "9FC662E4",
    "lastKnownWriteTime" : 1532404839,
    "last_content_update" : 1532404839899,
    "path" : "C:/Users/Reginald/Dropbox/Research/ceres/code/get-compustat-fundq.R",
    "project_path" : "code/get-compustat-fundq.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}